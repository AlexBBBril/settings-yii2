В это репозитории, находятся файлы и комманды, для первоначальной установки и настройки фреймфорка yii2 advanced version

Все комманды выполняются в коммандной строке, из папки с проектом и прописанными путями до обработчика PHP

Качаем composer


php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"

php -r "if (hash_file('SHA384', 'composer-setup.php') === 'aa96f26c2b67226a324c27919f1eb05f21c248b987e6195cad9690d5c1ff713d53020a02ac8c217dbf90a7eacc9d141d') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

php composer-setup.php

php -r "unlink('composer-setup.php');"



после установки composer 
install the Composer Asset Plugin:

php composer.phar global require "fxp/composer-asset-plugin:^1.2.0"


Далее устанавливаем сам фрейморк версии advanced  в корень проекта
php composer.phar create-project yiisoft/yii2-app-advanced . 2.0.10


Если не ставится в корень проекта, пишем так
php composer.phar create-project yiisoft/yii2-app-advanced advanced 2.0.10

И далее все что лежит в папке advanced переносим в корень проекта, а папку advanced удаляем


Далее необходимо проинициализировать yii2. В коммандной строке пишем: init

отвечаем на вопросы установки
Which environment do you want the application to be initialized in?

  [0] Development
  [1] Production

  Your choice [0-1, or "q" to quit] 0
  
   Initialize the application under 'Development' environment? [yes|no] y
   
   ... initialization completed.

Далее закидываем файлы .htaccess для правильной маршрутизации для папки frontend и backend

root/.htaccess - положить в корень проектра
frontend/web/.htaccess - положить с указанной вложенностью

заходим в backend/config/main.php в requests дописываем
'request' => [
            'csrfParam' => '_csrf-backend',
            'baseUrl'=>'/admin',
        ],
		
Раскоментить urlManager

Если необходима куки валидация дописываем в request
// !!! insert a secret key in the following (if it is empty) - this is required by cookie validation
            'cookieValidationKey' => 'yourcookievalidationkey',
			
Взять можно в backend/config/main-local.php



в commom/config/main.php при необходимости настраиваем БД
'components' => [
        'cache' => [
            'class' => 'yii\caching\FileCache',
        ],
        'db' => [
            'class' => 'yii\db\Connection',
            'dsn' => 'mysql:host=localhost;dbname=dbname',
            'username' => 'username',
            'password' => 'password',
            'charset' => 'utf8',
            'tablePrefix' => 'tablePrefix_'
        ],
    ],
		
		
заходим в frontend/config/main.php в requests дописываем

'request' => [
            'csrfParam' => '_csrf-frontend',
            'baseUrl' => '',
        ],


Если необходима куки валидация дописываем в request
// !!! insert a secret key in the following (if it is empty) - this is required by cookie validation
            'cookieValidationKey' => 'yourcookievalidationkey',
			
Взять можно в frontend/config/main-local.php

Раскоментить urlManager

Наслаждаемся проектом с нормальными URL
